{"ast":null,"code":"var _jsxFileName = \"/Users/kyeongsookim/Downloads/startupproject1/tierproject/admin/src/components/pages/create-page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { map, _ } from 'lodash';\nimport MetaTags from 'react-meta-tags';\nimport * as AWS from 'aws-sdk';\nimport Breadcrumb from '../common/breadcrumb';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Container, Row, Col, Card, CardBody, Form, Input, Label, Button, Nav, NavItem, NavLink, TabContent, TabPane, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, InputGroup, ModalHeader, ModalBody, CardTitle, CardHeader, Modal, FormGroup } from 'reactstrap';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UPDATE_SELLING = gql`\n  mutation createTermsanduse($contents: String) {\n    createTermsanduse(contents: $contents) {\n      id\n    }\n  }\n`;\nconst ME_QUERY = gql`\n  query me {\n    me {\n      id\n      name\n      email\n    }\n  }\n`;\nconst CREACT_PRODUCT_MUTATION = gql`\n    mutation createProduct(\n        $title: String\n        $description: String\n        $type: String\n        $brand: String\n        $category: String\n        $price: Int\n        $newproduct: String\n        $sale: String\n        $stock: String\n        $discount: Int\n        $variants: String\n        $images: String\n        $userId: Int\n\t\t$productpageId: Int\n       \n    ) {\n        createProduct(\n        title: $title\n        description:$description\n        type:$type\n        brand: $brand\n        category: $category\n        price:$price\n        newproduct:$newproduct\n        sale: $sale\n        stock: $stock\n        discount: $discount\n        variants:$variants\n        images: $images\n        userId:$userId\n\t\tproductpageId:$productpageId\n         \n        ) {\n            userId\n        }\n    }\n`;\n\nconst Create_page = props => {\n  _s();\n\n  var node = useRef();\n  const [startDate, setStartDate] = useState(new Date());\n  const [testarr, settestarr] = useState([]);\n  const [collectsource, setcollectsource] = useState('not selected');\n  const [activeTab, setActiveTab] = useState('0');\n  const [contentvalue, setcontentvalue] = useState('');\n  const [imageCenterModal, setImageCenterModal] = useState(false);\n  const [s3imagesforup, sets3imagesforup] = useState([]);\n  const [formStateimage, setFormStateimage] = useState([]);\n  const [status, setstatus] = useState(); //   const {\n  //     loading,\n  //     error: error3,\n  //     data: medata,\n  //   } = useQuery(DATA_QUERY2, {\n  //     fetchPolicy: \"network-only\",\n  //     onCompleted: medata => {\n  //       if (medata) {\n  //         console.log(\"df\", medata.Termsanduses[0]?.contents)\n  //         setstatus(medata.Termsanduses[0]?.contents)\n  //       }\n  //     },\n  //     onError: error3 => {\n  //       console.log(\"error!3\", error)\n  //     },\n  //   })\n\n  const [formState, setFormState] = useState({\n    id: 0,\n    productImages: [],\n    descriptionHTMLContent: \"\",\n    title: '',\n    description: '',\n    type: '',\n    brand: '',\n    category: '',\n    price: 0,\n    newproduct: '',\n    sale: '',\n    stock: '',\n    discount: 0,\n    variants: '',\n    images: '',\n    userId: 0,\n    productpageId: 0\n  });\n  const [imageCenterFormState, setImageCenterFormState] = useState({\n    startDate: null,\n    endDate: null,\n    page: 1,\n    size: 20,\n    selectedIds: []\n  });\n  const {\n    error,\n    data\n  } = useQuery(ME_QUERY, {\n    onCompleted: data => {\n      console.log('data!3', data.me.id);\n      setFormState({ ...formState,\n        id: data.me.id\n      });\n    },\n    onError: error => {\n      console.log('error!3', error);\n    }\n  });\n  const [createsellingmutation, {\n    data2,\n    error2\n  }] = useMutation(UPDATE_SELLING, {\n    onCompleted: data2 => {\n      window.alert('업데이트 완료');\n      window.location.reload();\n    },\n    onError: error2 => console.log('error!3', error2)\n  });\n  const [productCReate] = useMutation(CREACT_PRODUCT_MUTATION, {\n    onError: error5 => {\n      console.log(\"error5\", error5); // window.location.reload();\n    },\n    onCompleted: data5 => {\n      console.log(\"data5\", data5);\n    }\n  });\n\n  const startmutation = () => {\n    createsellingmutation({\n      variables: {\n        contents: formState.descriptionHTMLContent\n      }\n    });\n  };\n\n  const startcreateproductmutation = () => {\n    console.log(\"formstate11\", formState);\n    productCReate({\n      variables: {\n        title: String(formState.title),\n        description: String(formState.descriptionHTMLContent),\n        type: \"none\",\n        brand: String(formState.brand),\n        category: String(formState.category),\n        price: Number(formState.price),\n        newproduct: \"none\",\n        sale: String(formState.sale),\n        stock: String(formState.stock),\n        discount: Number(formState.discount),\n        variants: String(formState.variants),\n        images: JSON.stringify(s3imagesforup),\n        userId: Number(formState.id),\n        productpageId: 1\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"s3imagesforup\", s3imagesforup);\n  }, [s3imagesforup]);\n  const config = {\n    bucketName: process.env.REACT_APP_S3_BUCKETNAME,\n    region: process.env.REACT_APP_S3_BUCKETREGION,\n    // accessKeyId: process.env.REACT_S3_ACCESSKEYID,\n    accessKeyId: process.env.REACT_APP_S3_ACCESSKEYID,\n    secretAccessKey: process.env.REACT_APP_S3_SECRETACCESSKEY\n  };\n  const s3 = new AWS.S3({\n    region: process.env.REACT_APP_S3_BUCKETNAME,\n    accessKeyId: process.env.REACT_APP_S3_ACCESSKEYID,\n    secretAccessKey: process.env.REACT_APP_S3_SECRETACCESSKEY\n  });\n\n  const uploadToS3 = async data => {\n    let name = uuidv4() + '.' + data.type.substring(6);\n    console.log('sdfsdf', data.name);\n    await s3.putObject({\n      Key: name,\n      Bucket: 'yoyomobucket',\n      // ContentType: \"image/jpeg\",\n      ContentType: data.type,\n      Body: data,\n      ACL: 'public-read'\n    }).promise();\n    return `https://${config.bucketName}.s3.${config.region}.amazonaws.com/${name}`;\n  };\n\n  const uploadFile = async e => {\n    console.log('dfsdf', process.env);\n\n    try {\n      if (e.target.files.length > 0) {\n        for (let i = 0; i < e.target.files.length; i++) {\n          // uploadFile1(s3images1[i], s3images1[i]);\n          const url = await uploadToS3(e.target.files[i]);\n          const url2 = await sets3imagesforup(prevImages => prevImages.concat(url));\n          const urlbefore = await [{\n            fileName: e.target.files[i].name,\n            image: url,\n            id: uuidv4() + '.' + e.target.files[i].type.substring(6)\n          }];\n          const url3 = await setFormStateimage(formStateimage => formStateimage.concat(urlbefore));\n\n          if (e.target.files.length - 1 == i) {\n            return;\n          }\n        }\n      } else {\n        const url = await uploadToS3(e.target.files[0]);\n        console.log('url', url);\n        sets3imagesforup(prevImages => prevImages.concat(url));\n      } // const url = await uploadToS3(e.target.files[0])\n      // console.log(\"url\", url)\n      // sets3imagesforup((prevImages) => prevImages.concat(url));\n      // res = \"\"\n\n    } catch (error) {\n      console.log('ee', error);\n      window.alert('업로드 도중 오류가 발생하였습니다. 잠시 후 다시 시도 부탁드립니다.', error);\n    }\n  };\n\n  console.log(formState, 'formstart');\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"\\uC774\\uC6A9\\uC57D\\uAD00 \\uD3B8\\uC9D1 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          title: \"\\uC81C\\uD488 \\uC5C5\\uB85C\\uB4DC\",\n          parent: \"Pages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-xl-3 col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this), \"\\uC81C\\uD488\\uBA85\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control col-xl-8 col-md-7\",\n              type: \"text\",\n              required: \"\",\n              value: formState.title,\n              onChange: e => {\n                setFormState({ ...formState,\n                  title: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-xl-3 col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), \" \\uBE0C\\uB79C\\uB4DC\\uBA85\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control col-xl-8 col-md-7\",\n              type: \"text\",\n              required: \"\",\n              value: formState.brand,\n              onChange: e => {\n                setFormState({ ...formState,\n                  brand: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-xl-3 col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), \" \\uCE74\\uD14C\\uACE0\\uB9AC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control col-xl-8 col-md-7\",\n              type: \"text\",\n              required: \"\",\n              value: formState.category,\n              onChange: e => {\n                setFormState({ ...formState,\n                  category: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-xl-3 col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), \" \\uAC00\\uACA9\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control col-xl-8 col-md-7\",\n              type: \"number\",\n              required: \"\",\n              value: formState.price,\n              onChange: e => {\n                setFormState({ ...formState,\n                  price: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-xl-3 col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this), \" \\uC138\\uC77C\\uC5EC\\uBD80(\\uB124, \\uC544\\uB2C8\\uC624)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control col-xl-8 col-md-7\",\n              type: \"text\",\n              required: \"\",\n              value: formState.sale,\n              onChange: e => {\n                setFormState({ ...formState,\n                  sale: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-xl-3 col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), \" \\uD560\\uC778\\uC728(\\uC544\\uB2D0\\uC2DC \\uACF5\\uB780)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control col-xl-8 col-md-7\",\n              type: \"text\",\n              required: \"\",\n              value: formState.discount,\n              onChange: e => {\n                setFormState({ ...formState,\n                  discount: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-xl-3 col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), \" \\uC7AC\\uACE0\\uAC2F\\uC218\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control col-xl-8 col-md-7\",\n              type: \"number\",\n              required: \"\",\n              value: formState.stock,\n              onChange: e => {\n                setFormState({ ...formState,\n                  stock: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-xl-3 col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this), \" \\uC0C1\\uD488\\uC635\\uC158\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control col-xl-8 col-md-7\",\n              type: \"text\",\n              required: \"\",\n              value: formState.variants,\n              onChange: e => {\n                setFormState({ ...formState,\n                  variants: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-xl-3 col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 17\n              }, this), \" \\uC0C1\\uD488\\uC774\\uBBF8\\uC9C0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control col-xl-8 col-md-7\",\n              type: \"text\",\n              required: \"\",\n              value: formState.images,\n              onChange: e => {\n                setFormState({ ...formState,\n                  images: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Editor, {\n            apiKey: \"5w7nppptiaeqbf4id6k3xdeewc84wjk9jdflqfvi0zryhnob\",\n            value: formState.descriptionHTMLContent,\n            onEditorChange: e => {\n              setFormState({ ...formState,\n                descriptionHTMLContent: e\n              });\n            },\n            init: {\n              placeholder: '정보를 입력해 주세요.',\n              height: 700,\n              menubar: false,\n              plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n              toolbar: 'imageCenterButton  formatselect  ' + 'bold italic underline alignleft aligncenter ' + 'alignright  bullist numlist  ',\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n              setup: editor => {\n                editor.ui.registry.addButton('imageCenterButton', {\n                  icon: 'image',\n                  text: '업로드',\n                  onAction: e => {\n                    setImageCenterFormState({ ...imageCenterFormState,\n                      position: 'textEdit'\n                    });\n                    setImageCenterModal(true);\n                  }\n                });\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => startcreateproductmutation(),\n            children: \"\\uC0C1\\uD488 \\uC5C5\\uB85C\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: imageCenterModal,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                \"aria-label\": \"Close\",\n                className: \"close float-right\",\n                \"data-dismiss\": \"modal\",\n                type: \"button\",\n                onClick: () => setImageCenterModal(false),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-white\",\n                  \"aria-hidden\": true,\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                className: \"mb-3\",\n                children: \"\\uC0C1\\uD488 \\uAE30\\uBCF8 \\uC815\\uBCF4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                className: \"form-control form-control-lg\",\n                id: \"formFileLg\",\n                type: \"file\",\n                name: \"file\",\n                multiple: true,\n                onChange: uploadFile,\n                ref: node\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Container, {\n                fluid: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  style: {\n                    marginTop: \"15px\"\n                  },\n                  children: formStateimage ? formStateimage.length > 0 ? formStateimage.map((imageData, imageIndex) => /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 4,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: imageCenterFormState.selectedIds.includes(imageData.id) ? {\n                        height: 'auto%',\n                        border: 'dotted',\n                        borderColor: 'red'\n                      } : {\n                        height: 'auto%',\n                        border: 'dotted',\n                        borderColor: 'white'\n                      },\n                      onClick: () => {\n                        setImageCenterFormState({ ...imageCenterFormState,\n                          selectedIds: [...imageCenterFormState.selectedIds, imageData.id]\n                        });\n                      },\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          maxWidth: '100%',\n                          maxHeight: '100%',\n                          display: 'inline-block',\n                          margin: '0 auto',\n                          verticalAlign: 'middle !important',\n                          padding: '0'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          style: {\n                            width: '100%'\n                          },\n                          src: imageData.image,\n                          alt: imageData.fileName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 593,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 29\n                    }, this)\n                  }, imageIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 27\n                  }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, this), imageCenterFormState.selectedIds.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n                className: \"float-right\",\n                color: \"success\",\n                onClick: () => {\n                  if (imageCenterFormState.position === 'mainImage') {\n                    formStateimage && setFormState({ ...formState,\n                      productImages: _.uniq([...formState.productImages, ...formStateimage.filter(filterData => imageCenterFormState.selectedIds.includes(filterData.id)).map(imageData => imageData.image)])\n                    }); // imageAddSuccess()\n\n                    setImageCenterModal(false);\n                    setImageCenterFormState({ ...imageCenterFormState,\n                      position: null,\n                      selectedIds: []\n                    });\n                  }\n\n                  if (imageCenterFormState.position === 'textEdit') {\n                    const imageList = formStateimage.filter(filterDate => imageCenterFormState.selectedIds.includes(filterDate.id)).map(imageDate => imageDate.image);\n\n                    if (imageList.length > 0) {\n                      console.log('imgae', imageList); //   setFormState({\n                      //     ...formState,\n                      //     descriptionHTML: formState.descriptionHTMLContent\n                      //       ? `${formState.descriptionHTMLContent}<img src=\"${imageList[0]}\" />`\n                      //       : `<img src=\"${imageList[0]}\" />`,\n                      //   })\n\n                      setFormState({ ...formState,\n                        descriptionHTMLContent: formState.descriptionHTMLContent ? `${formState.descriptionHTMLContent}<img src=${imageList[0]} />` : `<img src=${imageList[0]} />`\n                      }); // setFormState({\n                      // \t...formState,\n                      // \tdescriptionHTMLContent: `${formState.descriptionHTMLContent}`\n                      //   })\n                    }\n                  }\n                },\n                children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create_page, \"g0fV6h45B6hOYzEKtTNwQkAzxuo=\", false, function () {\n  return [useQuery, useMutation, useMutation];\n});\n\n_c = Create_page;\nexport default Create_page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create_page\");","map":{"version":3,"sources":["/Users/kyeongsookim/Downloads/startupproject1/tierproject/admin/src/components/pages/create-page.js"],"names":["React","useEffect","useState","useRef","map","_","MetaTags","AWS","Breadcrumb","v4","uuidv4","Container","Row","Col","Card","CardBody","Form","Input","Label","Button","Nav","NavItem","NavLink","TabContent","TabPane","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","InputGroup","ModalHeader","ModalBody","CardTitle","CardHeader","Modal","FormGroup","Editor","gql","useMutation","useQuery","UPDATE_SELLING","ME_QUERY","CREACT_PRODUCT_MUTATION","Create_page","props","node","startDate","setStartDate","Date","testarr","settestarr","collectsource","setcollectsource","activeTab","setActiveTab","contentvalue","setcontentvalue","imageCenterModal","setImageCenterModal","s3imagesforup","sets3imagesforup","formStateimage","setFormStateimage","status","setstatus","formState","setFormState","id","productImages","descriptionHTMLContent","title","description","type","brand","category","price","newproduct","sale","stock","discount","variants","images","userId","productpageId","imageCenterFormState","setImageCenterFormState","endDate","page","size","selectedIds","error","data","onCompleted","console","log","me","onError","createsellingmutation","data2","error2","window","alert","location","reload","productCReate","error5","data5","startmutation","variables","contents","startcreateproductmutation","String","Number","JSON","stringify","config","bucketName","process","env","REACT_APP_S3_BUCKETNAME","region","REACT_APP_S3_BUCKETREGION","accessKeyId","REACT_APP_S3_ACCESSKEYID","secretAccessKey","REACT_APP_S3_SECRETACCESSKEY","s3","S3","uploadToS3","name","substring","putObject","Key","Bucket","ContentType","Body","ACL","promise","uploadFile","e","target","files","length","i","url","url2","prevImages","concat","urlbefore","fileName","image","url3","value","placeholder","height","menubar","plugins","toolbar","content_style","setup","editor","ui","registry","addButton","icon","text","onAction","position","marginTop","imageData","imageIndex","includes","border","borderColor","maxWidth","maxHeight","display","margin","verticalAlign","padding","width","uniq","filter","filterData","imageList","filterDate","imageDate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport { map, _ } from 'lodash'\r\nimport MetaTags from 'react-meta-tags'\r\nimport * as AWS from 'aws-sdk'\r\nimport Breadcrumb from '../common/breadcrumb'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  InputGroup,\r\n  ModalHeader,\r\n  ModalBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  Modal,\r\n  FormGroup,\r\n} from 'reactstrap'\r\n\r\nimport { Editor } from '@tinymce/tinymce-react'\r\n\r\nimport { gql, useMutation, useQuery } from '@apollo/client'\r\n\r\nconst UPDATE_SELLING = gql`\r\n  mutation createTermsanduse($contents: String) {\r\n    createTermsanduse(contents: $contents) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\n\r\nconst ME_QUERY = gql`\r\n  query me {\r\n    me {\r\n      id\r\n      name\r\n      email\r\n    }\r\n  }\r\n`\r\n\r\nconst CREACT_PRODUCT_MUTATION = gql`\r\n    mutation createProduct(\r\n        $title: String\r\n        $description: String\r\n        $type: String\r\n        $brand: String\r\n        $category: String\r\n        $price: Int\r\n        $newproduct: String\r\n        $sale: String\r\n        $stock: String\r\n        $discount: Int\r\n        $variants: String\r\n        $images: String\r\n        $userId: Int\r\n\t\t$productpageId: Int\r\n       \r\n    ) {\r\n        createProduct(\r\n        title: $title\r\n        description:$description\r\n        type:$type\r\n        brand: $brand\r\n        category: $category\r\n        price:$price\r\n        newproduct:$newproduct\r\n        sale: $sale\r\n        stock: $stock\r\n        discount: $discount\r\n        variants:$variants\r\n        images: $images\r\n        userId:$userId\r\n\t\tproductpageId:$productpageId\r\n         \r\n        ) {\r\n            userId\r\n        }\r\n    }\r\n`\r\n\r\nconst Create_page = (props) => {\r\n  var node = useRef()\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [testarr, settestarr] = useState([])\r\n  const [collectsource, setcollectsource] = useState('not selected')\r\n  const [activeTab, setActiveTab] = useState('0')\r\n  const [contentvalue, setcontentvalue] = useState('')\r\n  const [imageCenterModal, setImageCenterModal] = useState(false)\r\n  const [s3imagesforup, sets3imagesforup] = useState([])\r\n  const [formStateimage, setFormStateimage] = useState([])\r\n  const [status, setstatus] = useState()\r\n\r\n  //   const {\r\n  //     loading,\r\n  //     error: error3,\r\n  //     data: medata,\r\n  //   } = useQuery(DATA_QUERY2, {\r\n\r\n  //     fetchPolicy: \"network-only\",\r\n  //     onCompleted: medata => {\r\n  //       if (medata) {\r\n  //         console.log(\"df\", medata.Termsanduses[0]?.contents)\r\n  //         setstatus(medata.Termsanduses[0]?.contents)\r\n  //       }\r\n  //     },\r\n  //     onError: error3 => {\r\n  //       console.log(\"error!3\", error)\r\n  //     },\r\n  //   })\r\n\r\n  const [formState, setFormState] = useState({\r\n\t  id: 0,\r\n    productImages: [],\r\n\tdescriptionHTMLContent:\"\",\r\n    title: '',\r\n    description: '',\r\n    type: '',\r\n    brand: '',\r\n    category: '',\r\n    price: 0,\r\n    newproduct: '',\r\n    sale: '',\r\n    stock: '',\r\n    discount: 0,\r\n    variants: '',\r\n    images: '',\r\n    userId: 0,\r\n    productpageId: 0,\r\n  })\r\n  const [imageCenterFormState, setImageCenterFormState] = useState({\r\n    startDate: null,\r\n    endDate: null,\r\n    page: 1,\r\n    size: 20,\r\n    selectedIds: [],\r\n  })\r\n\r\n  const { error, data } = useQuery(ME_QUERY, {\r\n    onCompleted: (data) => {\r\n      console.log('data!3', data.me.id)\r\n\t  setFormState({\r\n\t\t...formState,\r\n\t\tid: data.me.id,\r\n\t  })\r\n\r\n    },\r\n    onError: (error) => {\r\n      console.log('error!3', error)\r\n    },\r\n  })\r\n\r\n  const [createsellingmutation, { data2, error2 }] = useMutation(\r\n    UPDATE_SELLING,\r\n    {\r\n      onCompleted: (data2) => {\r\n        window.alert('업데이트 완료')\r\n        window.location.reload()\r\n      },\r\n      onError: (error2) => console.log('error!3', error2),\r\n    },\r\n  )\r\n\r\n\r\n  const [productCReate] = useMutation(CREACT_PRODUCT_MUTATION, {\r\n\tonError: (error5) => {\r\n\t\tconsole.log(\"error5\", error5);\r\n\r\n\t\r\n\t\t// window.location.reload();\r\n\t},\r\n\tonCompleted: (data5) => {\r\n\t\tconsole.log(\"data5\", data5);\r\n\t\t\r\n\t},\r\n});\r\n\r\n\r\n  const startmutation = () => {\r\n    createsellingmutation({\r\n      variables: {\r\n        contents: formState.descriptionHTMLContent,\r\n      },\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const startcreateproductmutation = () => {\r\n\t  console.log(\"formstate11\", formState)\r\n    productCReate({\r\n      variables: {\r\n        title: String(formState.title),\r\n\t\tdescription: String(formState.descriptionHTMLContent),\r\n\t\ttype: \"none\",\r\n\t\tbrand: String(formState.brand),\r\n\t\tcategory: String(formState.category),\r\n\t\tprice: Number(formState.price),\r\n\t\tnewproduct: \"none\",\r\n\t\tsale: String(formState.sale),\r\n\t\tstock: String(formState.stock),\r\n\t\tdiscount: Number(formState.discount),\r\n\t\tvariants: String(formState.variants),\r\n\t\timages:JSON.stringify(s3imagesforup),\r\n\t\tuserId: Number(formState.id),\r\n\t\tproductpageId: 1,\r\n      },\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\tconsole.log(\"s3imagesforup\",s3imagesforup)\r\n  },[s3imagesforup])\r\n\r\n\r\n\r\n  const config = {\r\n    bucketName: process.env.REACT_APP_S3_BUCKETNAME,\r\n    region: process.env.REACT_APP_S3_BUCKETREGION,\r\n    // accessKeyId: process.env.REACT_S3_ACCESSKEYID,\r\n    accessKeyId: process.env.REACT_APP_S3_ACCESSKEYID,\r\n    secretAccessKey: process.env.REACT_APP_S3_SECRETACCESSKEY,\r\n  }\r\n\r\n  const s3 = new AWS.S3({\r\n    region: process.env.REACT_APP_S3_BUCKETNAME,\r\n    accessKeyId: process.env.REACT_APP_S3_ACCESSKEYID,\r\n    secretAccessKey: process.env.REACT_APP_S3_SECRETACCESSKEY,\r\n  })\r\n\r\n  const uploadToS3 = async (data) => {\r\n    let name = uuidv4() + '.' + data.type.substring(6)\r\n    console.log('sdfsdf', data.name)\r\n    await s3\r\n      .putObject({\r\n        Key: name,\r\n        Bucket: 'yoyomobucket',\r\n        // ContentType: \"image/jpeg\",\r\n        ContentType: data.type,\r\n        Body: data,\r\n        ACL: 'public-read',\r\n      })\r\n      .promise()\r\n    return `https://${config.bucketName}.s3.${config.region}.amazonaws.com/${name}`\r\n  }\r\n\r\n  const uploadFile = async (e) => {\r\n    console.log('dfsdf', process.env)\r\n    try {\r\n      if (e.target.files.length > 0) {\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n          // uploadFile1(s3images1[i], s3images1[i]);\r\n          const url = await uploadToS3(e.target.files[i])\r\n          const url2 = await sets3imagesforup((prevImages) =>\r\n            prevImages.concat(url),\r\n          )\r\n          const urlbefore = await [\r\n            {\r\n              fileName: e.target.files[i].name,\r\n              image: url,\r\n              id: uuidv4() + '.' + e.target.files[i].type.substring(6),\r\n            },\r\n          ]\r\n          const url3 = await setFormStateimage((formStateimage) =>\r\n            formStateimage.concat(urlbefore),\r\n          )\r\n          if (e.target.files.length - 1 == i) {\r\n            return\r\n          }\r\n        }\r\n      } else {\r\n        const url = await uploadToS3(e.target.files[0])\r\n        console.log('url', url)\r\n        sets3imagesforup((prevImages) => prevImages.concat(url))\r\n      }\r\n\r\n      // const url = await uploadToS3(e.target.files[0])\r\n      // console.log(\"url\", url)\r\n      // sets3imagesforup((prevImages) => prevImages.concat(url));\r\n      // res = \"\"\r\n    } catch (error) {\r\n      console.log('ee', error)\r\n      window.alert(\r\n        '업로드 도중 오류가 발생하였습니다. 잠시 후 다시 시도 부탁드립니다.',\r\n        error,\r\n      )\r\n    }\r\n  }\r\n\r\n  console.log(formState, 'formstart')\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <MetaTags>\r\n          <title>이용약관 편집 </title>\r\n        </MetaTags>\r\n        <Container fluid>\r\n          {/* Render Breadcrumb */}\r\n          <Breadcrumb title=\"제품 업로드\" parent=\"Pages\" />\r\n          <Col xs={12}>\r\n            <FormGroup className=\"row\">\r\n              <Label className=\"col-xl-3 col-md-4\">\r\n                <span>*</span>제품명\r\n              </Label>\r\n              <Input\r\n                className=\"form-control col-xl-8 col-md-7\"\r\n                type=\"text\"\r\n                required=\"\"\r\n                value={formState.title}\r\n                onChange={(e) => {\r\n                  setFormState({\r\n                    ...formState,\r\n                    title: e.target.value,\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"row\">\r\n              <Label className=\"col-xl-3 col-md-4\">\r\n                <span>*</span> 브랜드명\r\n              </Label>\r\n              <Input\r\n                className=\"form-control col-xl-8 col-md-7\"\r\n                type=\"text\"\r\n                required=\"\"\r\n                value={formState.brand}\r\n                onChange={(e) => {\r\n                  setFormState({\r\n                    ...formState,\r\n                    brand: e.target.value,\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"row\">\r\n              <Label className=\"col-xl-3 col-md-4\">\r\n                <span>*</span> 카테고리\r\n              </Label>\r\n              <Input\r\n                className=\"form-control col-xl-8 col-md-7\"\r\n                type=\"text\"\r\n                required=\"\"\r\n                value={formState.category}\r\n                onChange={(e) => {\r\n                  setFormState({\r\n                    ...formState,\r\n                    category: e.target.value,\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"row\">\r\n              <Label className=\"col-xl-3 col-md-4\">\r\n                <span>*</span> 가격\r\n              </Label>\r\n              <Input\r\n                className=\"form-control col-xl-8 col-md-7\"\r\n                type=\"number\"\r\n                required=\"\"\r\n                value={formState.price}\r\n                onChange={(e) => {\r\n                  setFormState({\r\n                    ...formState,\r\n                    price: e.target.value,\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"row\">\r\n              <Label className=\"col-xl-3 col-md-4\">\r\n                <span>*</span> 세일여부(네, 아니오)\r\n              </Label>\r\n              <Input\r\n                className=\"form-control col-xl-8 col-md-7\"\r\n                type=\"text\"\r\n                required=\"\"\r\n                value={formState.sale}\r\n                onChange={(e) => {\r\n                  setFormState({\r\n                    ...formState,\r\n                    sale: e.target.value,\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"row\">\r\n              <Label className=\"col-xl-3 col-md-4\">\r\n                <span>*</span> 할인율(아닐시 공란)\r\n              </Label>\r\n              <Input\r\n                className=\"form-control col-xl-8 col-md-7\"\r\n                type=\"text\"\r\n                required=\"\"\r\n                value={formState.discount}\r\n                onChange={(e) => {\r\n                  setFormState({\r\n                    ...formState,\r\n                    discount: e.target.value,\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"row\">\r\n              <Label className=\"col-xl-3 col-md-4\">\r\n                <span>*</span> 재고갯수\r\n              </Label>\r\n              <Input\r\n                className=\"form-control col-xl-8 col-md-7\"\r\n                type=\"number\"\r\n                required=\"\"\r\n                value={formState.stock}\r\n                onChange={(e) => {\r\n                  setFormState({\r\n                    ...formState,\r\n                    stock: e.target.value,\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"row\">\r\n              <Label className=\"col-xl-3 col-md-4\">\r\n                <span>*</span> 상품옵션\r\n              </Label>\r\n              <Input\r\n                className=\"form-control col-xl-8 col-md-7\"\r\n                type=\"text\"\r\n                required=\"\"\r\n                value={formState.variants}\r\n                onChange={(e) => {\r\n                  setFormState({\r\n                    ...formState,\r\n                    variants: e.target.value,\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"row\">\r\n              <Label className=\"col-xl-3 col-md-4\">\r\n                <span>*</span> 상품이미지\r\n              </Label>\r\n              <Input\r\n                className=\"form-control col-xl-8 col-md-7\"\r\n                type=\"text\"\r\n                required=\"\"\r\n                value={formState.images}\r\n                onChange={(e) => {\r\n                  setFormState({\r\n                    ...formState,\r\n                    images: e.target.value,\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <Editor\r\n              apiKey=\"5w7nppptiaeqbf4id6k3xdeewc84wjk9jdflqfvi0zryhnob\"\r\n              value={formState.descriptionHTMLContent}\r\n              onEditorChange={(e) => {\r\n                setFormState({\r\n                  ...formState,\r\n                  descriptionHTMLContent: e,\r\n                })\r\n              }}\r\n              init={{\r\n                placeholder: '정보를 입력해 주세요.',\r\n                height: 700,\r\n                menubar: false,\r\n                plugins: [\r\n                  'advlist autolink lists link image charmap print preview anchor',\r\n                  'searchreplace visualblocks code fullscreen',\r\n                  'insertdatetime media table paste code help wordcount',\r\n                ],\r\n                toolbar:\r\n                  'imageCenterButton  formatselect  ' +\r\n                  'bold italic underline alignleft aligncenter ' +\r\n                  'alignright  bullist numlist  ',\r\n\r\n                content_style:\r\n                  'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n                setup: (editor) => {\r\n                  editor.ui.registry.addButton('imageCenterButton', {\r\n                    icon: 'image',\r\n                    text: '업로드',\r\n                    onAction: (e) => {\r\n                      setImageCenterFormState({\r\n                        ...imageCenterFormState,\r\n                        position: 'textEdit',\r\n                      })\r\n                      setImageCenterModal(true)\r\n                    },\r\n                  })\r\n                },\r\n              }}\r\n            />\r\n            <Button onClick={() => startcreateproductmutation()}>상품 업로드</Button>\r\n          </Col>\r\n          <Modal isOpen={imageCenterModal}>\r\n            <Card>\r\n              {/* <CardHeader style={{ backgroundColor: \"#5e72e4\" }}> */}\r\n              <CardHeader>\r\n                <button\r\n                  aria-label=\"Close\"\r\n                  className=\"close float-right\"\r\n                  data-dismiss=\"modal\"\r\n                  type=\"button\"\r\n                  onClick={() => setImageCenterModal(false)}\r\n                >\r\n                  <span className=\"text-white\" aria-hidden>\r\n                    ×\r\n                  </span>\r\n                </button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <CardTitle className=\"mb-3\">상품 기본 정보</CardTitle>\r\n                <Input\r\n                  className=\"form-control form-control-lg\"\r\n                  id=\"formFileLg\"\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  multiple\r\n                  onChange={uploadFile}\r\n                  ref={node}\r\n                />\r\n\r\n                <Container fluid>\r\n                  <Row style = {{\r\n\t\t\t\t\t  marginTop:\"15px\"\r\n\t\t\t\t  }}>\r\n                    {formStateimage ? (\r\n                      formStateimage.length > 0 ? (\r\n                        formStateimage.map((imageData, imageIndex) => (\r\n                          <Col sm={4} xs={4} key={imageIndex}>\r\n                            <Card\r\n                              style={\r\n                                imageCenterFormState.selectedIds.includes(\r\n                                  imageData.id,\r\n                                )\r\n                                  ? {\r\n                                      height: 'auto%',\r\n                                      border: 'dotted',\r\n                                      borderColor: 'red',\r\n                                    }\r\n                                  : {\r\n                                      height: 'auto%',\r\n                                      border: 'dotted',\r\n                                      borderColor: 'white',\r\n                                    }\r\n                              }\r\n                              onClick={() => {\r\n                                setImageCenterFormState({\r\n                                  ...imageCenterFormState,\r\n                                  selectedIds: [\r\n                                    ...imageCenterFormState.selectedIds,\r\n                                    imageData.id,\r\n                                  ],\r\n                                })\r\n                              }}\r\n                            >\r\n                              <CardBody\r\n                                style={{\r\n                                  maxWidth: '100%',\r\n                                  maxHeight: '100%',\r\n                                  display: 'inline-block',\r\n                                  margin: '0 auto',\r\n                                  verticalAlign: 'middle !important',\r\n                                  padding: '0',\r\n                                }}\r\n                              >\r\n                                <img\r\n                                  style={{ width: '100%' }}\r\n                                  src={imageData.image}\r\n                                  alt={imageData.fileName}\r\n                                />\r\n                              </CardBody>\r\n                            </Card>\r\n                          </Col>\r\n                        ))\r\n                      ) : (\r\n                        <></>\r\n                      )\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </Row>\r\n                </Container>\r\n                {/* <h5 className=\"mt-5\">\r\n              {imageCenterFormState.selectedIds.length} 개 선택 됨\r\n            </h5> */}\r\n                {imageCenterFormState.selectedIds.length > 0 ? (\r\n                  <Button\r\n                    className=\"float-right\"\r\n                    color=\"success\"\r\n                    onClick={() => {\r\n                      if (imageCenterFormState.position === 'mainImage') {\r\n                        formStateimage &&\r\n                          setFormState({\r\n                            ...formState,\r\n                            productImages: _.uniq([\r\n                              ...formState.productImages,\r\n                              ...formStateimage\r\n                                .filter((filterData) =>\r\n                                  imageCenterFormState.selectedIds.includes(\r\n                                    filterData.id,\r\n                                  ),\r\n                                )\r\n                                .map((imageData) => imageData.image),\r\n                            ]),\r\n                          })\r\n                        // imageAddSuccess()\r\n                        setImageCenterModal(false)\r\n                        setImageCenterFormState({\r\n                          ...imageCenterFormState,\r\n                          position: null,\r\n                          selectedIds: [],\r\n                        })\r\n                      }\r\n\r\n                      if (imageCenterFormState.position === 'textEdit') {\r\n                        const imageList = formStateimage\r\n                          .filter((filterDate) =>\r\n                            imageCenterFormState.selectedIds.includes(\r\n                              filterDate.id,\r\n                            ),\r\n                          )\r\n                          .map((imageDate) => imageDate.image)\r\n\r\n                        if (imageList.length > 0) {\r\n                          console.log('imgae', imageList)\r\n                          //   setFormState({\r\n                          //     ...formState,\r\n                          //     descriptionHTML: formState.descriptionHTMLContent\r\n                          //       ? `${formState.descriptionHTMLContent}<img src=\"${imageList[0]}\" />`\r\n                          //       : `<img src=\"${imageList[0]}\" />`,\r\n                          //   })\r\n                          setFormState({\r\n                            ...formState,\r\n                            descriptionHTMLContent:\r\n                              formState.descriptionHTMLContent\r\n                                ? `${formState.descriptionHTMLContent}<img src=${imageList[0]} />`\r\n                                : `<img src=${imageList[0]} />`,\r\n                          })\r\n\r\n                          // setFormState({\r\n                          // \t...formState,\r\n                          // \tdescriptionHTMLContent: `${formState.descriptionHTMLContent}`\r\n\r\n                          //   })\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    추가하기\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Modal>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Create_page\r\n"]},"metadata":{},"sourceType":"module"}